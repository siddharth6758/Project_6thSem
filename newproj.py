# -*- coding: utf-8 -*-
"""newproj.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gAw0QbdyI-mXozdQbtZLzOYLiDZucpe4

**Machine Learning Model**
"""

from pandas.io.formats.info import DataFrameTableBuilderVerbose
import pandas as pd
import numpy as np

dataFile = pd.read_csv('https://raw.githubusercontent.com/dataprofessor/data/master/delaney_solubility_with_descriptors.csv')
dataFile

# ------------Parth
x = np.arange(1,25)
x.reshape(3,8)

Y = dataFile['logS']
Y

X = dataFile.drop('logS',axis=1)
X

"""### **Data Splitting**"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state =100)

from sklearn.linear_model import LinearRegression

lr = LinearRegression()
lr.fit(x_train,y_train)

y_lr_train_pred = lr.predict(x_train)
y_lr_test_pred = lr.predict(x_test)
y_lr_test_pred

from sklearn.metrics import mean_squared_error , r2_score

lr_train_mse = mean_squared_error(y_train ,y_lr_train_pred)
lr_train_r2 = r2_score(y_train, y_lr_train_pred)

lr_test_mse = mean_squared_error(y_test, y_lr_test_pred)
lr_test_r2 = r2_score(y_test, y_lr_test_pred)

print(lr_train_mse,lr_train_r2,lr_test_mse,lr_test_r2)

lr_result = pd.DataFrame(['Linear Regression',lr_train_mse,lr_train_r2,lr_test_mse,lr_test_r2]).transpose()
lr_result.columns = ('Method','Train-MSE','Train-R2','Test-MSE','Test-R2')
lr_result